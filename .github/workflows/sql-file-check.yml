name: SQL Files Change Monitor Workflow

on:
  workflow_call:
    secrets:
      slack_webhook_url:
        required: true

jobs:
  review_new_sql_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Commit Info
        id: commit-info
        run: |
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
          echo "COMMIT_LINK=https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Get all changed SQL files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **.sql

      - name: Set up environment
        run: |
          echo "KEYWORDS_REGEX=ADD COLUMN|REMOVE COLUMN|ALTER TABLE" >> $GITHUB_ENV

      - name: Analyze SQL files
        if: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          SQL_FILES=(${{ steps.changed-files.outputs.all_changed_files }})
          FILE_LINKS=""
          for file in "${SQL_FILES[@]}"; do
            FILE_URL="https://github.com/${GITHUB_REPOSITORY}/blob/${GITHUB_REF#refs/heads/}/${file}"
            if grep -qE "${KEYWORDS_REGEX}" "$file"; then
              FILE_LINKS+=":warning: <$FILE_URL|$file>\n"
            else
              FILE_LINKS+=":ok: <$FILE_URL|$file>\n"
            fi
          done
          if [ -n "$FILE_LINKS" ]; then
            REPO_NAME=$(basename ${GITHUB_REPOSITORY})
            MESSAGE_TEXT=":construction: *SQL File Updates* :construction:\n${COMMIT_AUTHOR} committed \"<${COMMIT_LINK}|${COMMIT_MESSAGE}>\" at ${REPO_NAME}\n$FILE_LINKS"
            echo "found_sql=Yes" >> $GITHUB_ENV
            echo "MESSAGE_TEXT=$MESSAGE_TEXT" >> $GITHUB_ENV
          else
            echo "found_sql=No" >> $GITHUB_ENV
          fi

      - name: Notify Slack
        if: env.found_sql == 'Yes'
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"${{ env.MESSAGE_TEXT }}"}' ${{ secrets.slack_webhook_url }}
